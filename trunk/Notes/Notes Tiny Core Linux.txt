Notes Tiny Core Linux
----
Into the Core: A look at Tiny Core Linux
By: Lauri Kasanen et al
ISBN 978-952-93-3391-2
Publication date 2013
Copyright Â© 2013 Lauri Kasanen

contains an exe to perform easy install to USB from Windows
http://core2usb.sf.net/
----

----
Media dir layout
 - the top level of the media should only contain two folders
  *
  |- boot
  |- tce (this is where application will be stored)
 
  - apps present at the root of 'tce' will be mounted on boot
  - in a subdirectory of 'tce' another directory named 'optional'
    may contain apps to mount on-demand

 
  
  
-----
Notes Damn Small Linux
 - according to Wikipedia Shingledecker was exiled from the project and started Tiny Core Linux, no 
   updates existed for it for years with the site going on and off alot.  Distro-watch doesn't even 
   list it anymore.

----
Negus Live Linux Series The Official Damn Small Linux Book: The Tiny Adaptable Linux That Runs on Anything
By: Robert Shingledecker; John Andrews; Christopher Negus
Publisher: Prentice Hall
Pub. Date: August 6, 2007
Print ISBN-10: 0-13-233869-6
Print ISBN-13: 978-0-13-233869-1
Pages in Print Edition: 448

companion content files 
www.informit.com/ebookfiles/9780132338691

forums at
www.damnsmalllinux.org/cgi-bin/forums/ikonboard.cgi

wiki at
www.damnsmalllinux.org/wiki
----

----
Versions
 - SYSLINUX for older PCs that require booting via a floppy
 - ISOLINUX std for booting live CD's
 - Qema VM for booting an emulator in MS Windows
 - VMware VM uses VMware to run emulator in MS Windows
----

----
Boot Process
 - preliminary
  - need DSL on some media 
   - historically it was a CD-R having the .iso
     burned at the slowest possiable rate (X4)
  - BIOS needs to target the form of media for booting from
  
 - DSL Boot Process is three stages
 (1) Boot Prompt, allows for boot configuartion settings
  - the first screen after computer startup is the boot prompt
  - pressing Enter will take default and proceed to the next step
  - pressing nothing, after 60s, will do the same and proceed onward
  - pressing F2 cancels the 60s timer
  - pressing F3 displays a help menu of boot prompt options
  - multiple options are space-delimited 
  (example)
   dsl vga=normal noapic nacpi pnpbios=off acpi=off noapm
  - to use daemons you must include 'secure' command 
   - you will be prompted to provide a password
  - common daemons are 
   nfs: Network File System
   ssh: Secure Shell
   host: to assign a host name to the running DSL instance
   dma: as speed enhancement for hardware (from year 2000 up)
   lpd: printing service
   cron: scheduled command exec
   syslog: system logging
   monkey: web services
   ftp: file transfer protocol
   fuse: file system in user space

 (2) Autoconfig
  - begins upon pressing Enter in first stage or timer expires
  - typically ends with init. X Window System - the GUI of DSL desktop
  
 (3) DSL X Setup
  - is optional, typically deals with USB mouse or esoteric hardware
  - to exit early, having DSL switch back to defaults, press the Tab key 
    followed by the Enter key
  - oddity, a two-button mouse may be a three button mouse because pressing
    both buttons at-the-same-time IS the third button.
   - the script at /usr/sbin/xsetup.sh is a script to set a two-button
     mouse to have a 'third' button on combo left-right click
	 - requires a restart of X server (?)
----

----
Using DSL Fluxbox
 - DSL uses an older graphical toolkit names GTK1.2 instead of current GTK2.0
  - this is deliberate since the older one is faster and lighter
 - the default interface is named Fluxbox 
  - there is a secondary interface named JWM which is more windows-esque
 - mouse-right click is Windows equivalent to the Start button
 - there are 4 workspaces (Fluxter), mouse-wheel will move between them
  - at the bottom-left are four boxes where the highlighted is current 
    workspace 
  - will contain a miniture of open apps within said workspace
 - on hover over app icon - single-left click to run
 - right-click on title-bar opens a window-specific context menu
  - the single '.' button at far-left of title bar will cause said
    app to be present in all four workspaces
  - title-bar buttons on right are common to windows users
 - drag is typical left-click-down and move window app within screen
 - the small tab at the bottom-left of a window's app is for clustering
   apps together - this requires a three button mouse
  - think as if multiple windows of the exact same size are stacked atop 
    each other 
 - small box in lower right corner of workspace is named Docked.lua
  - easy access to volume-control and mounted device
  - click the device name (e.g. hda1, cdrom) to toggle to the next device
   hda is first IDE drive
   hdb is second IDE drive
   sda is first SCSI or USB drive
   sdb is second SCSI or USB drive
  - when numbers appear after a drive name its representative of the partition
  hda1 is first partition of first IDE drive
----

----
Using DSL X-Based Apps
 - X-based on non-terminal apps include many common PC apps
  - calc, text editor, browser, ftp client, email client, etc.
  Aterm, terminal emulator
  AxY FTP, GUI FTP Client app
  Beaver, text editor 
  Calcoo, calculator
  Dillo, light web browser
  EmelFM, two-panel file browser
  Firefox,
  gRun, like Windows Run, access via root menu > Run Program
  GtkFind, file search, access via root menu > Apps > Tools > Find
  Gvu, PostScript viewer
  Ted, rich-text editor
  Siag, spreadsheet app
  Slypheed, email client app
  VNC Viewer, remote desktop app
  Rdesktop, remote desktop protocol client
  Xpdf, PDF viewer
  XMMS, media player
  Xpaint, image viewer editor
  xTris, the tetris game
  ZXGV, thumbnail image viewer
  Xzoom, screen mangifier

 - Terminal Apps
 ftp, for file transfer protocol
 index, database management system
 CDW, CD burn app
 Microcom, ultra-timy serial emulator
 Midnight, file manager
 Naim, instant msg, IRC client
 Nano, terminal based text editor
 Netrik, mini browser, handle html
 smbclient, for file sharing to windows machine
 SQLite, database management system
 Vi(m), advanced terminal text editor 
 
 - Lua based apps
 MS Word Viewer, allows for viewing .doc files 
   as PDF or PostScript
 Calendar, obvious
 dMix, Mount.lua and Docked, the little app in 
  bottom right corner of workspace
  
 - Daemon based apps
 ssh, Open Secure Shell
 FTPd, Ftp hosting
 nfs-common, network file sharing
 Monkey Web Server, web hosting
----

----
DSL Backup/Restore
 - DSLpanel > Backup/Restore 
  - enter a mounted device name in textbox
  - saves dir\files specified in .filetool.lst
  - backups are saved to a file that DSL scans for 
    upon boot named backup.tar.gz
 
 - itemized file-by-file backup selected by line item entries
   in /home/dsl/.filetool.lst
 - itemized exclusions are specified in a like-named 
    /home/dsl/.xfiletool.lst 
 - itemized lines includes wildcards
   Cache  (would exclude all files with this name)
   Cache* (would exclude all files starting with this name)
 
 - to directly control with drive DSL scans for backup.tar.gz
   use the boot option (hda2 is an example, actual device name)
     dsl restore=hda2
----

----
DSL Desktop Options
 - desktop options are persisted to the /home/dsl/.xinitrc file
 - to have terminal apps launched upon startup edit the 
   /home/dsl/.bash_profile and then add this file to your 
   backup list at /home/dsl/.filetool.lst
  
 - root menu > Desktop > Icon Tool allows for custom setting on
   how\what click do on the desktop
  - contains four bottom tabs, 
  - using Double-Click means should be coupled with 
    Layout > Use X/Y Coordinates since first click is select icon
	and second click is open app.
  - Add tab requires the path to the app and some generic icon 
  - Remove tab allows for removing icons from your desktop
  - these settings are persisted to /home/dsl/.xtdesktop
 - root menu > Desktop > Wallpapers allows for custom desktop backgrounds
  - radio-button Scale, Emblem are how to display the image 
  - OK button will temp display it as such
  - Install button will persist the selected background
  - Help button shows where image are stored
 
 - DSLpanel > Date/Time
  - to set the current system time. 
----

----
DSL Internet Connections 
 - DSLpanel > Netcardconfig 
  - will launch and attempt to connect to wired connection
  - wired connections will typically be detected automatically
 
 - Wireless connection
  - first requires the boot option nodhcp
  - the wireless setup is persisted to the /opt directory
  http:/www.damnsmalllinux.org/wiki/index.php/Verified_Wireless_Cards
   - contains a list of wireless network cards that will work with DSL
  - Iwconfig, Prism2 and Wlanconfig are tools avaliable at the DSLpanel
    for setup of wireless connection
  - Ndiswrapper lets you provide a windows driver for your wireless card
  http://ndiswrapper.sourceforge.net/mediawiki/index.php/List
   - is a good source for selecting a Windows driver for your wireless card
  - These apps are for older wireless connections 
----

----
DSL Printer Setup
 root menu > System > Printing/lpd > configure printer
  - prompts through some boilerplate licx and email stuff- punch through
  - upon "Checking permissiongs of /usr/share/apsfilter" enter 'y' 
  - choose 'add' for next screen if this is first time 
  - typical setup is only first 3 steps 
   - choosing a driver is printer specific, default options are 
     gimp-print (opt. 4) and 
   - choosing how printer is connected (network, direct-USB, etc)
    - choosing network printer will require IP 
	- choosing direct-connect requires which parallel port 
	 - for USB enter /dev/usb/lp0
   - choosing paper-size
  - print a test-page to verify the setup
   - if test page fails go back to main menu, start over and choose
     different options
  - name your print or leave as default name 'lp'
  - DSLpanel > Printing/lpd will start the printing queue
  - last to specify the printer across the OS use an 
    enviro var named PRINTER
   export PRINTER=my_printer_name_here
----

----
Getting Config From Web
 - web backup restore requires access to an FTP server
 - /home/dsl/.webdata.lst contains what is backed up to the web
  - this is like .filetool.lst but is sent to a remote location
    instead of a local drive.
 - root menu > System > Webdata Backup/Restore
  - requires the FTP remote location and cred's to it
  - the Datakey is yours and used to encrypt the content 
    sent to the remote location
  - if successful the settings are saved to /home/data.des file
 - restore is the same as above, having backed up once the 
   values in the FTP URL:, Login, etc will be present upon launch
  - click 'Restore'
 - feature is intended for non-machine specific settings to be 
   accessed anywhere
----

----
Extending Apps with MyDSL
 - to add app into the live CDs  
 - using MyDSL extension on desktop - required an internet connection
  - connects to a MyDSL download mirror
  - extension types are tar.gz, .dsl, .uci and .unc
   - tar.gz and .dsl are oldest and should be used only when later
     types are not avail.
	 
  - extension access is available from the desktop MyDSL 
  - select an item from the list-box to get a description
   - in description pay attention to the 'Comments:' section 
     since it should list that extensions prerequisites
  - choose a download location, typically /tmp
   - the extension is downloaded, installed and setup automatically
   - access to extension is contained somewhere under the root menu
  - if previously downloaded use the MyDSL > Load Local option 
 - change download location at DSLpanel > Select Mirror
  - the 'Select' button will show other host available
  
 - extension access is also available from web browser under 
   href 'Browse The myDSL repository.'
  - using browsers 'Save Link As' and save to /ramdisk/tmp
   - saving to /home will cause the extension to be included in
     backup making it very slow and problem prown
  - the shutdown process will check for extension in /ramdisk/tmp
    and prompt you to save them. Mount some drive and persist them there

 - extension also available via CLI
  mydsl-wget full-extension-name repository
  - to persist an extension use 
  mydsl-wget /full/file/name/path.uci uci 
  - to load use another CLI tool
  mydsl-load /full/file/name/path.uci
	
 - extensions are persisted in a packaged form and are loaded 
   automatically or by boot option
    mydsl=my_location
	 (example pendrive would be mydsl=sda1)
  - auto search is conducted in 
    /KNOPPIX/boot 
	<any to level directory named> /mydsl
  - having a unique path of 
    /mydsl/optional 
	conducts a special process to not load but allow for 
	loading at runtime from the root menu
 
 - to remove an extension just reboot or if its persisted then 
   remove it from the device
----

----
Running from USB Pendrive
 - of two install forms: USB-ZIP and USB-HDD where one may 
   work better with such-and-such machine
  - inconsistencies of USB boot BIOS cause many problems 
   - BIOS may only use USB ports in the back of the box
   - USB 2.0 standard may not work with USB 1.1
   - BIOS may require turning off 'quick boot' option
 - USB-ZIP emulates the old Iomega external Zip drives from 
    the 90's
 - USB-HDD is the more common option
  - DSL will use Linux style device names for USB as 
    sd[a-z][1-9] where sda1 is the first partition of the 
	 first USB 
 - text recommends running linux util 'cfdisk' 
  - [http://www.tldp.org/HOWTO/IBM7248-HOWTO/cfdisk.html]
  - create a single FAT16 partition on the USB stick
 
 - root menu > Apps > Tools > Install to USB Pen Drive > For USB-HDD Pendrive
  - find a pendrive using linux cmdline tool
   fdisk -l
  - will run a script in terminal 
  - the Pendrive should NOT be mounted
  - enter the linux-style name of your Pendrive (e.g. sda)
  - choose the location of the image where Web requires an internet connection
  - choose specific boot options if needed
  - choose another lang if needed (blank for English)
  - choose y twice
   - script will format the single partition, apply Syslinux to it
     and then setup a system image within it
  - at the root of the pendrive create a directory named /mydsl
   - may need to first mount the device 
----

----
Running DSL emulator in MS Windows
 - most of these instruction are in the readme.txt of the dsl-qemu dir
 - Qemu is a machine emulator
  - it is capable of emulating ARM on x86, x64 machines
 - whole emulator is available for download on file named
  dsl-embedded.zip
 - use Ctrl-Alt to allow mouse to move out of emulator  
 
 - to have access to some persited device use the (512 mb)
  - the name 'harddisk' is required
   qemu-img.exe create hard disk 512M
  - or if you cannot navigate to pendrive use
  C:\> E:\dsl-qemu\qemu\qemu-img.exe create E:\dsl-qemu\harddisk 512M
  - run the 1st-boot.bat file
   - ignore errors for now, format the virtual HD using linux command
  mke2fs /dev/hdb
  - mount the formatted drive using linux cmd
  mount /mnt/hdb
  - create the directories DSL uses within your virtual HD
  mkdir /mnt/hdb/mydsl
  mkdir /mnt/hdb/mydsl/modules 
  - copy the cloop.o file to the newly created modules dir
  cp /KNOPPIX/lib/modules/2.4.26/kernel/drivers/block/cloop.o \
      /mnt/hdb/mydsl/modules/
  - shutdown boot process
  shutdown -h now
  - now emulator can be started from dsl-vhd.bat
----  
  