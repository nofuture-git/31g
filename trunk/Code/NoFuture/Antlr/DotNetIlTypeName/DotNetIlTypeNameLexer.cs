//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Projects\31g\trunk\Code\NoFuture\Antlr\Grammers\DotNetIlTypeName.g4 by ANTLR 4.6.4

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace NoFuture.Antlr.Grammers {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.4")]
[System.CLSCompliant(false)]
public partial class DotNetIlTypeNameLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, GENERIC_COUNTER=8, 
		FOUR_SET_VER=9, VERSION=10, CULTURE=11, PUBLIC_KEY_TOKEN=12, PROCESSOR_ARCHITECTURE=13, 
		HEX_VALUE=14, CHIP_SETS=15, IDENTIFIER=16, ID_SEPARATOR=17, NL=18;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "GENERIC_COUNTER", 
		"FOUR_SET_VER", "VERSION", "CULTURE", "PUBLIC_KEY_TOKEN", "PROCESSOR_ARCHITECTURE", 
		"HEX_VALUE", "CHIP_SETS", "IDENTIFIER", "ID_SEPARATOR", "NL", "HEX_DIGIT", 
		"ID_FIRST_CHAR", "ID_ANY_OTHER", "LETTER", "DIGIT"
	};


	public DotNetIlTypeNameLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'['", "','", "']'", "', '", "'='", "'=neutral'", "'null'", null, 
		null, "'Version'", "'Culture'", "'PublicKeyToken'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, "GENERIC_COUNTER", "FOUR_SET_VER", 
		"VERSION", "CULTURE", "PUBLIC_KEY_TOKEN", "PROCESSOR_ARCHITECTURE", "HEX_VALUE", 
		"CHIP_SETS", "IDENTIFIER", "ID_SEPARATOR", "NL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "DotNetIlTypeName.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x14\xD4\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x3\x2\x3\x2\x3\x3\x3\x3"+
		"\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3"+
		"\a\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\n\x6\nO\n"+
		"\n\r\n\xE\nP\x3\n\x3\n\x6\nU\n\n\r\n\xE\nV\x3\n\x3\n\x6\n[\n\n\r\n\xE"+
		"\n\\\x3\n\x3\n\x6\n\x61\n\n\r\n\xE\n\x62\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v"+
		"\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r"+
		"\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3"+
		"\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE"+
		"\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x6\xF\x9B\n\xF"+
		"\r\xF\xE\xF\x9C\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x5\x10\xB6\n\x10\x3\x11\x3\x11\a\x11"+
		"\xBA\n\x11\f\x11\xE\x11\xBD\v\x11\x3\x12\x3\x12\x3\x13\x5\x13\xC2\n\x13"+
		"\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x5\x15\xCA\n\x15\x3\x16\x3"+
		"\x16\x3\x16\x5\x16\xCF\n\x16\x3\x17\x3\x17\x3\x18\x3\x18\x2\x2\x2\x19"+
		"\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13"+
		"\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2"+
		"\x12#\x2\x13%\x2\x14\'\x2\x2)\x2\x2+\x2\x2-\x2\x2/\x2\x2\x3\x2\x6\x4\x2"+
		"RRrr\x4\x2--\x30\x30\x5\x2\x32;\x43H\x63h\x4\x2\x43\\\x63|\xDD\x2\x3\x3"+
		"\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3"+
		"\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13"+
		"\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2"+
		"\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2"+
		"\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x3\x31\x3\x2\x2\x2\x5\x33\x3\x2\x2"+
		"\x2\a\x35\x3\x2\x2\x2\t\x37\x3\x2\x2\x2\v:\x3\x2\x2\x2\r<\x3\x2\x2\x2"+
		"\xF\x45\x3\x2\x2\x2\x11J\x3\x2\x2\x2\x13N\x3\x2\x2\x2\x15\x64\x3\x2\x2"+
		"\x2\x17l\x3\x2\x2\x2\x19t\x3\x2\x2\x2\x1B\x83\x3\x2\x2\x2\x1D\x9A\x3\x2"+
		"\x2\x2\x1F\xB5\x3\x2\x2\x2!\xB7\x3\x2\x2\x2#\xBE\x3\x2\x2\x2%\xC1\x3\x2"+
		"\x2\x2\'\xC5\x3\x2\x2\x2)\xC9\x3\x2\x2\x2+\xCE\x3\x2\x2\x2-\xD0\x3\x2"+
		"\x2\x2/\xD2\x3\x2\x2\x2\x31\x32\a]\x2\x2\x32\x4\x3\x2\x2\x2\x33\x34\a"+
		".\x2\x2\x34\x6\x3\x2\x2\x2\x35\x36\a_\x2\x2\x36\b\x3\x2\x2\x2\x37\x38"+
		"\a.\x2\x2\x38\x39\a\"\x2\x2\x39\n\x3\x2\x2\x2:;\a?\x2\x2;\f\x3\x2\x2\x2"+
		"<=\a?\x2\x2=>\ap\x2\x2>?\ag\x2\x2?@\aw\x2\x2@\x41\av\x2\x2\x41\x42\at"+
		"\x2\x2\x42\x43\a\x63\x2\x2\x43\x44\an\x2\x2\x44\xE\x3\x2\x2\x2\x45\x46"+
		"\ap\x2\x2\x46G\aw\x2\x2GH\an\x2\x2HI\an\x2\x2I\x10\x3\x2\x2\x2JK\a\x62"+
		"\x2\x2KL\x5/\x18\x2L\x12\x3\x2\x2\x2MO\x5/\x18\x2NM\x3\x2\x2\x2OP\x3\x2"+
		"\x2\x2PN\x3\x2\x2\x2PQ\x3\x2\x2\x2QR\x3\x2\x2\x2RT\a\x30\x2\x2SU\x5/\x18"+
		"\x2TS\x3\x2\x2\x2UV\x3\x2\x2\x2VT\x3\x2\x2\x2VW\x3\x2\x2\x2WX\x3\x2\x2"+
		"\x2XZ\a\x30\x2\x2Y[\x5/\x18\x2ZY\x3\x2\x2\x2[\\\x3\x2\x2\x2\\Z\x3\x2\x2"+
		"\x2\\]\x3\x2\x2\x2]^\x3\x2\x2\x2^`\a\x30\x2\x2_\x61\x5/\x18\x2`_\x3\x2"+
		"\x2\x2\x61\x62\x3\x2\x2\x2\x62`\x3\x2\x2\x2\x62\x63\x3\x2\x2\x2\x63\x14"+
		"\x3\x2\x2\x2\x64\x65\aX\x2\x2\x65\x66\ag\x2\x2\x66g\at\x2\x2gh\au\x2\x2"+
		"hi\ak\x2\x2ij\aq\x2\x2jk\ap\x2\x2k\x16\x3\x2\x2\x2lm\a\x45\x2\x2mn\aw"+
		"\x2\x2no\an\x2\x2op\av\x2\x2pq\aw\x2\x2qr\at\x2\x2rs\ag\x2\x2s\x18\x3"+
		"\x2\x2\x2tu\aR\x2\x2uv\aw\x2\x2vw\a\x64\x2\x2wx\an\x2\x2xy\ak\x2\x2yz"+
		"\a\x65\x2\x2z{\aM\x2\x2{|\ag\x2\x2|}\a{\x2\x2}~\aV\x2\x2~\x7F\aq\x2\x2"+
		"\x7F\x80\am\x2\x2\x80\x81\ag\x2\x2\x81\x82\ap\x2\x2\x82\x1A\x3\x2\x2\x2"+
		"\x83\x84\t\x2\x2\x2\x84\x85\at\x2\x2\x85\x86\aq\x2\x2\x86\x87\a\x65\x2"+
		"\x2\x87\x88\ag\x2\x2\x88\x89\au\x2\x2\x89\x8A\au\x2\x2\x8A\x8B\aq\x2\x2"+
		"\x8B\x8C\at\x2\x2\x8C\x8D\a\x43\x2\x2\x8D\x8E\at\x2\x2\x8E\x8F\a\x65\x2"+
		"\x2\x8F\x90\aj\x2\x2\x90\x91\ak\x2\x2\x91\x92\av\x2\x2\x92\x93\ag\x2\x2"+
		"\x93\x94\a\x65\x2\x2\x94\x95\av\x2\x2\x95\x96\aw\x2\x2\x96\x97\at\x2\x2"+
		"\x97\x98\ag\x2\x2\x98\x1C\x3\x2\x2\x2\x99\x9B\x5\'\x14\x2\x9A\x99\x3\x2"+
		"\x2\x2\x9B\x9C\x3\x2\x2\x2\x9C\x9A\x3\x2\x2\x2\x9C\x9D\x3\x2\x2\x2\x9D"+
		"\x1E\x3\x2\x2\x2\x9E\x9F\aO\x2\x2\x9F\xA0\aU\x2\x2\xA0\xA1\aK\x2\x2\xA1"+
		"\xB6\aN\x2\x2\xA2\xA3\a\x43\x2\x2\xA3\xA4\at\x2\x2\xA4\xB6\ao\x2\x2\xA5"+
		"\xA6\a\x43\x2\x2\xA6\xA7\ao\x2\x2\xA7\xA8\a\x66\x2\x2\xA8\xA9\a\x38\x2"+
		"\x2\xA9\xB6\a\x36\x2\x2\xAA\xAB\aK\x2\x2\xAB\xAC\a\x43\x2\x2\xAC\xAD\a"+
		"\x38\x2\x2\xAD\xB6\a\x36\x2\x2\xAE\xAF\aP\x2\x2\xAF\xB0\aq\x2\x2\xB0\xB1"+
		"\ap\x2\x2\xB1\xB6\ag\x2\x2\xB2\xB3\aZ\x2\x2\xB3\xB4\a:\x2\x2\xB4\xB6\a"+
		"\x38\x2\x2\xB5\x9E\x3\x2\x2\x2\xB5\xA2\x3\x2\x2\x2\xB5\xA5\x3\x2\x2\x2"+
		"\xB5\xAA\x3\x2\x2\x2\xB5\xAE\x3\x2\x2\x2\xB5\xB2\x3\x2\x2\x2\xB6 \x3\x2"+
		"\x2\x2\xB7\xBB\x5)\x15\x2\xB8\xBA\x5+\x16\x2\xB9\xB8\x3\x2\x2\x2\xBA\xBD"+
		"\x3\x2\x2\x2\xBB\xB9\x3\x2\x2\x2\xBB\xBC\x3\x2\x2\x2\xBC\"\x3\x2\x2\x2"+
		"\xBD\xBB\x3\x2\x2\x2\xBE\xBF\t\x3\x2\x2\xBF$\x3\x2\x2\x2\xC0\xC2\a\xF"+
		"\x2\x2\xC1\xC0\x3\x2\x2\x2\xC1\xC2\x3\x2\x2\x2\xC2\xC3\x3\x2\x2\x2\xC3"+
		"\xC4\a\f\x2\x2\xC4&\x3\x2\x2\x2\xC5\xC6\t\x4\x2\x2\xC6(\x3\x2\x2\x2\xC7"+
		"\xCA\x5-\x17\x2\xC8\xCA\a\x61\x2\x2\xC9\xC7\x3\x2\x2\x2\xC9\xC8\x3\x2"+
		"\x2\x2\xCA*\x3\x2\x2\x2\xCB\xCF\x5-\x17\x2\xCC\xCF\x5/\x18\x2\xCD\xCF"+
		"\a\x61\x2\x2\xCE\xCB\x3\x2\x2\x2\xCE\xCC\x3\x2\x2\x2\xCE\xCD\x3\x2\x2"+
		"\x2\xCF,\x3\x2\x2\x2\xD0\xD1\t\x5\x2\x2\xD1.\x3\x2\x2\x2\xD2\xD3\x4\x32"+
		";\x2\xD3\x30\x3\x2\x2\x2\r\x2PV\\\x62\x9C\xB5\xBB\xC1\xC9\xCE\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace NoFuture.Antlr.Grammers
