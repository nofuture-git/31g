//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Projects\31g\trunk\Code\NoFuture\Antlr\Grammers\ErlangConfig.g4 by ANTLR 4.6.4

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace NoFuture.Antlr.ErlangConfig
{
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="ErlangConfigParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.4")]
[System.CLSCompliant(false)]
public interface IErlangConfigListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>NameValue2Value</c>
	/// labeled alternative in <see cref="ErlangConfigParser.erlNameValuePair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNameValue2Value([NotNull] ErlangConfigParser.NameValue2ValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NameValue2Value</c>
	/// labeled alternative in <see cref="ErlangConfigParser.erlNameValuePair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNameValue2Value([NotNull] ErlangConfigParser.NameValue2ValueContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>NameValue2NameValue</c>
	/// labeled alternative in <see cref="ErlangConfigParser.erlNameValuePair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNameValue2NameValue([NotNull] ErlangConfigParser.NameValue2NameValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NameValue2NameValue</c>
	/// labeled alternative in <see cref="ErlangConfigParser.erlNameValuePair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNameValue2NameValue([NotNull] ErlangConfigParser.NameValue2NameValueContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>NameValue2Array</c>
	/// labeled alternative in <see cref="ErlangConfigParser.erlNameValuePair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNameValue2Array([NotNull] ErlangConfigParser.NameValue2ArrayContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NameValue2Array</c>
	/// labeled alternative in <see cref="ErlangConfigParser.erlNameValuePair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNameValue2Array([NotNull] ErlangConfigParser.NameValue2ArrayContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ErlangConfigParser.erlConfigFile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterErlConfigFile([NotNull] ErlangConfigParser.ErlConfigFileContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ErlangConfigParser.erlConfigFile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitErlConfigFile([NotNull] ErlangConfigParser.ErlConfigFileContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ErlangConfigParser.erlApplication"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterErlApplication([NotNull] ErlangConfigParser.ErlApplicationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ErlangConfigParser.erlApplication"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitErlApplication([NotNull] ErlangConfigParser.ErlApplicationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ErlangConfigParser.erlNameValuePair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterErlNameValuePair([NotNull] ErlangConfigParser.ErlNameValuePairContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ErlangConfigParser.erlNameValuePair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitErlNameValuePair([NotNull] ErlangConfigParser.ErlNameValuePairContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ErlangConfigParser.erlArray"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterErlArray([NotNull] ErlangConfigParser.ErlArrayContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ErlangConfigParser.erlArray"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitErlArray([NotNull] ErlangConfigParser.ErlArrayContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ErlangConfigParser.erlName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterErlName([NotNull] ErlangConfigParser.ErlNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ErlangConfigParser.erlName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitErlName([NotNull] ErlangConfigParser.ErlNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ErlangConfigParser.erlEmptyArray"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterErlEmptyArray([NotNull] ErlangConfigParser.ErlEmptyArrayContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ErlangConfigParser.erlEmptyArray"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitErlEmptyArray([NotNull] ErlangConfigParser.ErlEmptyArrayContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="ErlangConfigParser.erlAtomValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterErlAtomValue([NotNull] ErlangConfigParser.ErlAtomValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ErlangConfigParser.erlAtomValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitErlAtomValue([NotNull] ErlangConfigParser.ErlAtomValueContext context);
}
} // namespace NoFuture.Antlr.Grammers
