//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Projects\31g\trunk\Code\NoFuture\Antlr\Grammers\ErlangConfig.g4 by ANTLR 4.6.4

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace NoFuture.Antlr.Grammers {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IErlangConfigListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.4")]
[System.CLSCompliant(false)]
public partial class ErlangConfigBaseListener : IErlangConfigListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>NameValue2Value</c>
	/// labeled alternative in <see cref="ErlangConfigParser.erlNameValuePair"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNameValue2Value([NotNull] ErlangConfigParser.NameValue2ValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NameValue2Value</c>
	/// labeled alternative in <see cref="ErlangConfigParser.erlNameValuePair"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNameValue2Value([NotNull] ErlangConfigParser.NameValue2ValueContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>NameValue2NameValue</c>
	/// labeled alternative in <see cref="ErlangConfigParser.erlNameValuePair"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNameValue2NameValue([NotNull] ErlangConfigParser.NameValue2NameValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NameValue2NameValue</c>
	/// labeled alternative in <see cref="ErlangConfigParser.erlNameValuePair"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNameValue2NameValue([NotNull] ErlangConfigParser.NameValue2NameValueContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>NameValue2Array</c>
	/// labeled alternative in <see cref="ErlangConfigParser.erlNameValuePair"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNameValue2Array([NotNull] ErlangConfigParser.NameValue2ArrayContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NameValue2Array</c>
	/// labeled alternative in <see cref="ErlangConfigParser.erlNameValuePair"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNameValue2Array([NotNull] ErlangConfigParser.NameValue2ArrayContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ErlangConfigParser.erlConfigFile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterErlConfigFile([NotNull] ErlangConfigParser.ErlConfigFileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ErlangConfigParser.erlConfigFile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitErlConfigFile([NotNull] ErlangConfigParser.ErlConfigFileContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ErlangConfigParser.erlApplication"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterErlApplication([NotNull] ErlangConfigParser.ErlApplicationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ErlangConfigParser.erlApplication"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitErlApplication([NotNull] ErlangConfigParser.ErlApplicationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ErlangConfigParser.erlNameValuePair"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterErlNameValuePair([NotNull] ErlangConfigParser.ErlNameValuePairContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ErlangConfigParser.erlNameValuePair"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitErlNameValuePair([NotNull] ErlangConfigParser.ErlNameValuePairContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ErlangConfigParser.erlArray"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterErlArray([NotNull] ErlangConfigParser.ErlArrayContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ErlangConfigParser.erlArray"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitErlArray([NotNull] ErlangConfigParser.ErlArrayContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ErlangConfigParser.erlName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterErlName([NotNull] ErlangConfigParser.ErlNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ErlangConfigParser.erlName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitErlName([NotNull] ErlangConfigParser.ErlNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ErlangConfigParser.erlEmptyArray"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterErlEmptyArray([NotNull] ErlangConfigParser.ErlEmptyArrayContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ErlangConfigParser.erlEmptyArray"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitErlEmptyArray([NotNull] ErlangConfigParser.ErlEmptyArrayContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ErlangConfigParser.erlAtomValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterErlAtomValue([NotNull] ErlangConfigParser.ErlAtomValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ErlangConfigParser.erlAtomValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitErlAtomValue([NotNull] ErlangConfigParser.ErlAtomValueContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace NoFuture.Antlr.Grammers
